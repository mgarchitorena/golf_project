{"ast":null,"code":"var _jsxFileName = \"/Users/michaelgarchitorena/Downloads/golf_project/golf-rankings-app/src/PlayersPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './PlayersPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PlayersPage = () => {\n  _s();\n  const [players, setPlayers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [debugInfo, setDebugInfo] = useState('');\n  useEffect(() => {\n    const fetchPlayers = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        const apiKey = 'mI0K6O5QLl4C7PBOxGl46rBnfaemkzs0SOVokjP';\n\n        // Try multiple possible URL formats\n        const possibleUrls = [`https://api.sportradar.com/golf/trial/v3/en/players/wgr/2025/rankings.json?api_key=${apiKey}`, `https://api.sportradar.com/golf/trial/v3/en/rankings/wgr/2025.json?api_key=${apiKey}`, `https://api.sportradar.com/golf/trial/v3/en/rankings.json?api_key=${apiKey}`];\n        let lastError = null;\n        for (const url of possibleUrls) {\n          try {\n            console.log(`Trying URL: ${url}`);\n            setDebugInfo(`Trying: ${url.split('?')[0]}`);\n            const response = await fetch(url, {\n              method: 'GET',\n              headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n              }\n            });\n            console.log(`Response status: ${response.status}`);\n            console.log(`Response headers:`, response.headers);\n            if (!response.ok) {\n              const errorText = await response.text();\n              console.log(`Error response:`, errorText);\n              throw new Error(`HTTP ${response.status}: ${errorText}`);\n            }\n            const data = await response.json();\n            console.log('Raw API Response:', data);\n\n            // Try to extract players from different possible response structures\n            let playersData = [];\n            if (data.rankings && Array.isArray(data.rankings)) {\n              playersData = data.rankings;\n            } else if (data.players && Array.isArray(data.players)) {\n              playersData = data.players;\n            } else if (Array.isArray(data)) {\n              playersData = data;\n            } else {\n              console.log('Unexpected data structure:', data);\n              throw new Error(`Unexpected response format: ${JSON.stringify(data).substring(0, 200)}...`);\n            }\n            if (playersData.length > 0) {\n              setPlayers(playersData.slice(0, 20)); // Show top 20 players\n              setDebugInfo(`Successfully loaded ${playersData.length} players`);\n              return; // Success, exit the loop\n            } else {\n              throw new Error('No player data found in response');\n            }\n          } catch (err) {\n            console.error(`Error with URL ${url}:`, err);\n            lastError = err;\n            continue; // Try next URL\n          }\n        }\n\n        // If we get here, all URLs failed\n        throw lastError || new Error('All API endpoints failed');\n      } catch (err) {\n        console.error('Final error:', err);\n\n        // Provide detailed error information\n        if (err.message.includes('CORS')) {\n          setError('CORS Error: API requests blocked by browser. You may need to use a backend proxy or enable CORS.');\n        } else if (err.message.includes('403') || err.message.includes('401')) {\n          setError('Authentication Error: API key may be invalid or expired. Check your Sportradar account.');\n        } else if (err.message.includes('404')) {\n          setError('Endpoint Not Found: The API endpoint may have changed. Check Sportradar documentation.');\n        } else if (err.message.includes('NetworkError') || err.message.includes('Failed to fetch')) {\n          setError('Network Error: Unable to reach the API. Check your internet connection.');\n        } else {\n          setError(`API Error: ${err.message}`);\n        }\n        setDebugInfo(`Error: ${err.message}`);\n\n        // For development, show mock data\n        console.log('Loading mock data for development...');\n        setPlayers(getMockPlayers());\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPlayers();\n  }, []);\n\n  // Mock data for development/testing\n  const getMockPlayers = () => [{\n    id: '1',\n    name: 'Scottie Scheffler',\n    country: 'USA',\n    rank: 1,\n    points: 15.234\n  }, {\n    id: '2',\n    name: 'Xander Schauffele',\n    country: 'USA',\n    rank: 2,\n    points: 10.567\n  }, {\n    id: '3',\n    name: 'Rory McIlroy',\n    country: 'NIR',\n    rank: 3,\n    points: 9.234\n  }, {\n    id: '4',\n    name: 'Ludvig Åberg',\n    country: 'SWE',\n    rank: 4,\n    points: 8.901\n  }, {\n    id: '5',\n    name: 'Wyndham Clark',\n    country: 'USA',\n    rank: 5,\n    points: 8.456\n  }, {\n    id: '6',\n    name: 'Jon Rahm',\n    country: 'ESP',\n    rank: 6,\n    points: 7.789\n  }, {\n    id: '7',\n    name: 'Viktor Hovland',\n    country: 'NOR',\n    rank: 7,\n    points: 7.234\n  }, {\n    id: '8',\n    name: 'Collin Morikawa',\n    country: 'USA',\n    rank: 8,\n    points: 6.901\n  }, {\n    id: '9',\n    name: 'Patrick Cantlay',\n    country: 'USA',\n    rank: 9,\n    points: 6.567\n  }, {\n    id: '10',\n    name: 'Bryson DeChambeau',\n    country: 'USA',\n    rank: 10,\n    points: 6.234\n  }];\n  const renderPlayerCard = (player, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player-card\",\n    children: player ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-rank\",\n        children: [\"#\", player.rank]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"player-name\",\n        children: player.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"player-country\",\n        children: player.country\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-points\",\n        children: typeof player.points === 'number' ? `${player.points.toFixed(3)} points` : `${player.points} points`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-rank placeholder\",\n        children: \"#--\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"player-name placeholder\",\n        children: \"TBD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"player-country placeholder\",\n        children: \"TBD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-points placeholder\",\n        children: \"TBD points\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"players-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"page-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"World Golf Rankings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Current top players in professional golf\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), debugInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"debug-info\",\n      children: /*#__PURE__*/_jsxDEV(\"small\", {\n        children: [\"Debug: \", debugInfo]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading players...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u26A0\\uFE0F API Issue Detected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Error:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 14\n        }, this), \" \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"details\", {\n        children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n          children: \"Troubleshooting Steps\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Check if your Sportradar API key is still valid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Verify the API endpoint URL in Sportradar documentation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Consider implementing a backend proxy to handle CORS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Check browser console for detailed error messages\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"em\", {\n          children: \"Currently showing mock data for development purposes.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"players-grid\",\n      children: Array(20).fill(null).map((_, index) => renderPlayerCard(players[index] || null, index))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"page-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Data provided by Sportradar API\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n};\n_s(PlayersPage, \"S8SLtHTQnI4PoNbX0K/9uIdYs0Y=\");\n_c = PlayersPage;\nexport default PlayersPage;\n\n// import React, { useState, useEffect } from 'react';\n\n// interface Player {\n//   id: string;\n//   name: string;\n//   country: string;\n//   rank: number;\n//   points: number;\n// }\n\n// interface ApiResponse {\n//   rankings: Array<{\n//     id: string;\n//     name: string;\n//     country: string;\n//     rank: number;\n//     points: number;\n//   }>;\n// }\n\n// const PlayersPage: React.FC = () => {\n//   const [players, setPlayers] = useState<Player[]>([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState<string | null>(null);\n\n//   useEffect(() => {\n//     const fetchPlayers = async () => {\n//       try {\n//         const apiKey = 'mI0K6O5QLl4C7PBOxGl46rBnfaemkzs0SOVokjP';\n//         const url = `https://api.sportradar.com/golf/trial/v3/en/players/wgr/2025/rankings.json?api_key=${apiKey}`;\n\n//         const response = await fetch(url);\n\n//         if (!response.ok) {\n//           throw new Error(`HTTP error! status: ${response.status}`);\n//         }\n\n//         const data: ApiResponse = await response.json();\n\n//         if (data.rankings && Array.isArray(data.rankings)) {\n//           setPlayers(data.rankings.slice(0, 20)); // Show top 20 players\n//         } else {\n//           throw new Error('Invalid data format');\n//         }\n//       } catch (err) {\n//         console.error('Error fetching players:', err);\n//         setError('Failed to load player data');\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchPlayers();\n//   }, []);\n\n//   const renderPlayerCard = (player: Player | null, index: number) => (\n//     <div \n//       key={index}\n//       style={{\n//         border: '1px solid #ddd',\n//         borderRadius: '8px',\n//         padding: '1.5rem',\n//         backgroundColor: '#f9f9f9',\n//         textAlign: 'center'\n//       }}\n//     >\n//       {player ? (\n//         <>\n//           <div style={{\n//             fontSize: '2rem',\n//             fontWeight: 'bold',\n//             color: '#2c5530',\n//             marginBottom: '0.5rem'\n//           }}>\n//             #{player.rank}\n//           </div>\n//           <h3 style={{\n//             margin: '0.5rem 0',\n//             color: '#333'\n//           }}>\n//             {player.name}\n//           </h3>\n//           <p style={{\n//             color: '#666',\n//             margin: '0.5rem 0'\n//           }}>\n//             {player.country}\n//           </p>\n//           <div style={{\n//             backgroundColor: '#2c5530',\n//             color: 'white',\n//             padding: '0.5rem',\n//             borderRadius: '4px',\n//             fontSize: '0.9rem'\n//           }}>\n//             {player.points} points\n//           </div>\n//         </>\n//       ) : (\n//         <>\n//           <div style={{\n//             fontSize: '2rem',\n//             fontWeight: 'bold',\n//             color: '#999',\n//             marginBottom: '0.5rem'\n//           }}>\n//             #--\n//           </div>\n//           <h3 style={{\n//             margin: '0.5rem 0',\n//             color: '#999'\n//           }}>\n//             TBD\n//           </h3>\n//           <p style={{\n//             color: '#999',\n//             margin: '0.5rem 0'\n//           }}>\n//             TBD\n//           </p>\n//           <div style={{\n//             backgroundColor: '#999',\n//             color: 'white',\n//             padding: '0.5rem',\n//             borderRadius: '4px',\n//             fontSize: '0.9rem'\n//           }}>\n//             TBD points\n//           </div>\n//         </>\n//       )}\n//     </div>\n//   );\n\n//   return (\n//     <div>\n//       <header style={{ textAlign: 'center', marginBottom: '2rem' }}>\n//         <h1 style={{ \n//           fontSize: '2.5rem', \n//           color: '#2c5530',\n//           marginBottom: '1rem'\n//         }}>\n//           World Golf Rankings\n//         </h1>\n//         <p style={{ \n//           fontSize: '1.1rem', \n//           color: '#666'\n//         }}>\n//           Current top players in professional golf\n//         </p>\n//       </header>\n\n//       {loading && (\n//         <div style={{ textAlign: 'center', padding: '2rem' }}>\n//           <p style={{ fontSize: '1.2rem', color: '#666' }}>Loading players...</p>\n//         </div>\n//       )}\n\n//       {error && (\n//         <div style={{ \n//           textAlign: 'center', \n//           padding: '2rem',\n//           backgroundColor: '#ffe6e6',\n//           border: '1px solid #ffb3b3',\n//           borderRadius: '8px',\n//           marginBottom: '2rem'\n//         }}>\n//           <p style={{ color: '#cc0000', fontSize: '1.1rem' }}>{error}</p>\n//         </div>\n//       )}\n\n//       <div style={{ \n//         display: 'grid', \n//         gridTemplateColumns: 'repeat(auto-fill, minmax(280px, 1fr))',\n//         gap: '1.5rem',\n//         marginBottom: '2rem'\n//       }}>\n//         {Array(20).fill(null).map((_, index) => \n//           renderPlayerCard(players[index] || null, index)\n//         )}\n//       </div>\n\n//       <footer style={{ \n//         textAlign: 'center', \n//         padding: '2rem 0',\n//         borderTop: '1px solid #eee',\n//         color: '#666'\n//       }}>\n//         <p>Data provided by Sportradar API</p>\n//       </footer>\n//     </div>\n//   );\n// };\n\n// export default PlayersPage;\nvar _c;\n$RefreshReg$(_c, \"PlayersPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","PlayersPage","_s","players","setPlayers","loading","setLoading","error","setError","debugInfo","setDebugInfo","fetchPlayers","apiKey","possibleUrls","lastError","url","console","log","split","response","fetch","method","headers","status","ok","errorText","text","Error","data","json","playersData","rankings","Array","isArray","JSON","stringify","substring","length","slice","err","message","includes","getMockPlayers","id","name","country","rank","points","renderPlayerCard","player","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","fill","map","_","_c","$RefreshReg$"],"sources":["/Users/michaelgarchitorena/Downloads/golf_project/golf-rankings-app/src/PlayersPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './PlayersPage.css';\n\ninterface Player {\n  id: string;\n  name: string;\n  country: string;\n  rank: number;\n  points: number;\n}\n\ninterface ApiResponse {\n  rankings?: Array<{\n    id: string;\n    name: string;\n    country: string;\n    rank: number;\n    points: number;\n  }>;\n  // Alternative response structures\n  players?: Array<{\n    id: string;\n    name: string;\n    country: string;\n    rank: number;\n    points: number;\n  }>;\n  data?: any;\n}\n\nconst PlayersPage: React.FC = () => {\n  const [players, setPlayers] = useState<Player[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [debugInfo, setDebugInfo] = useState<string>('');\n\n  useEffect(() => {\n    const fetchPlayers = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        \n        const apiKey = 'mI0K6O5QLl4C7PBOxGl46rBnfaemkzs0SOVokjP';\n        \n        // Try multiple possible URL formats\n        const possibleUrls = [\n          `https://api.sportradar.com/golf/trial/v3/en/players/wgr/2025/rankings.json?api_key=${apiKey}`,\n          `https://api.sportradar.com/golf/trial/v3/en/rankings/wgr/2025.json?api_key=${apiKey}`,\n          `https://api.sportradar.com/golf/trial/v3/en/rankings.json?api_key=${apiKey}`,\n        ];\n        \n        let lastError = null;\n        \n        for (const url of possibleUrls) {\n          try {\n            console.log(`Trying URL: ${url}`);\n            setDebugInfo(`Trying: ${url.split('?')[0]}`);\n            \n            const response = await fetch(url, {\n              method: 'GET',\n              headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n              },\n            });\n            \n            console.log(`Response status: ${response.status}`);\n            console.log(`Response headers:`, response.headers);\n            \n            if (!response.ok) {\n              const errorText = await response.text();\n              console.log(`Error response:`, errorText);\n              throw new Error(`HTTP ${response.status}: ${errorText}`);\n            }\n            \n            const data: ApiResponse = await response.json();\n            console.log('Raw API Response:', data);\n            \n            // Try to extract players from different possible response structures\n            let playersData: Player[] = [];\n            \n            if (data.rankings && Array.isArray(data.rankings)) {\n              playersData = data.rankings;\n            } else if (data.players && Array.isArray(data.players)) {\n              playersData = data.players;\n            } else if (Array.isArray(data)) {\n              playersData = data;\n            } else {\n              console.log('Unexpected data structure:', data);\n              throw new Error(`Unexpected response format: ${JSON.stringify(data).substring(0, 200)}...`);\n            }\n            \n            if (playersData.length > 0) {\n              setPlayers(playersData.slice(0, 20)); // Show top 20 players\n              setDebugInfo(`Successfully loaded ${playersData.length} players`);\n              return; // Success, exit the loop\n            } else {\n              throw new Error('No player data found in response');\n            }\n            \n          } catch (err) {\n            console.error(`Error with URL ${url}:`, err);\n            lastError = err;\n            continue; // Try next URL\n          }\n        }\n        \n        // If we get here, all URLs failed\n        throw lastError || new Error('All API endpoints failed');\n        \n      } catch (err: any) {\n        console.error('Final error:', err);\n        \n        // Provide detailed error information\n        if (err.message.includes('CORS')) {\n          setError('CORS Error: API requests blocked by browser. You may need to use a backend proxy or enable CORS.');\n        } else if (err.message.includes('403') || err.message.includes('401')) {\n          setError('Authentication Error: API key may be invalid or expired. Check your Sportradar account.');\n        } else if (err.message.includes('404')) {\n          setError('Endpoint Not Found: The API endpoint may have changed. Check Sportradar documentation.');\n        } else if (err.message.includes('NetworkError') || err.message.includes('Failed to fetch')) {\n          setError('Network Error: Unable to reach the API. Check your internet connection.');\n        } else {\n          setError(`API Error: ${err.message}`);\n        }\n        \n        setDebugInfo(`Error: ${err.message}`);\n        \n        // For development, show mock data\n        console.log('Loading mock data for development...');\n        setPlayers(getMockPlayers());\n        \n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchPlayers();\n  }, []);\n\n  // Mock data for development/testing\n  const getMockPlayers = (): Player[] => [\n    { id: '1', name: 'Scottie Scheffler', country: 'USA', rank: 1, points: 15.234 },\n    { id: '2', name: 'Xander Schauffele', country: 'USA', rank: 2, points: 10.567 },\n    { id: '3', name: 'Rory McIlroy', country: 'NIR', rank: 3, points: 9.234 },\n    { id: '4', name: 'Ludvig Åberg', country: 'SWE', rank: 4, points: 8.901 },\n    { id: '5', name: 'Wyndham Clark', country: 'USA', rank: 5, points: 8.456 },\n    { id: '6', name: 'Jon Rahm', country: 'ESP', rank: 6, points: 7.789 },\n    { id: '7', name: 'Viktor Hovland', country: 'NOR', rank: 7, points: 7.234 },\n    { id: '8', name: 'Collin Morikawa', country: 'USA', rank: 8, points: 6.901 },\n    { id: '9', name: 'Patrick Cantlay', country: 'USA', rank: 9, points: 6.567 },\n    { id: '10', name: 'Bryson DeChambeau', country: 'USA', rank: 10, points: 6.234 },\n  ];\n\n  const renderPlayerCard = (player: Player | null, index: number) => (\n    <div key={index} className=\"player-card\">\n      {player ? (\n        <>\n          <div className=\"player-rank\">#{player.rank}</div>\n          <h3 className=\"player-name\">{player.name}</h3>\n          <p className=\"player-country\">{player.country}</p>\n          <div className=\"player-points\">\n            {typeof player.points === 'number' \n              ? `${player.points.toFixed(3)} points`\n              : `${player.points} points`\n            }\n          </div>\n        </>\n      ) : (\n        <>\n          <div className=\"player-rank placeholder\">#--</div>\n          <h3 className=\"player-name placeholder\">TBD</h3>\n          <p className=\"player-country placeholder\">TBD</p>\n          <div className=\"player-points placeholder\">TBD points</div>\n        </>\n      )}\n    </div>\n  );\n\n  return (\n    <div className=\"players-page\">\n      <header className=\"page-header\">\n        <h1>World Golf Rankings</h1>\n        <p>Current top players in professional golf</p>\n      </header>\n\n      {/* Debug Info (remove in production) */}\n      {debugInfo && (\n        <div className=\"debug-info\">\n          <small>Debug: {debugInfo}</small>\n        </div>\n      )}\n\n      {loading && (\n        <div className=\"loading-container\">\n          <p>Loading players...</p>\n        </div>\n      )}\n\n      {error && (\n        <div className=\"error-container\">\n          <h3>⚠️ API Issue Detected</h3>\n          <p><strong>Error:</strong> {error}</p>\n          <details>\n            <summary>Troubleshooting Steps</summary>\n            <ul>\n              <li>Check if your Sportradar API key is still valid</li>\n              <li>Verify the API endpoint URL in Sportradar documentation</li>\n              <li>Consider implementing a backend proxy to handle CORS</li>\n              <li>Check browser console for detailed error messages</li>\n            </ul>\n          </details>\n          <p><em>Currently showing mock data for development purposes.</em></p>\n        </div>\n      )}\n\n      <div className=\"players-grid\">\n        {Array(20).fill(null).map((_, index) => \n          renderPlayerCard(players[index] || null, index)\n        )}\n      </div>\n\n      <footer className=\"page-footer\">\n        <p>Data provided by Sportradar API</p>\n      </footer>\n    </div>\n  );\n};\n\nexport default PlayersPage;\n\n// import React, { useState, useEffect } from 'react';\n\n// interface Player {\n//   id: string;\n//   name: string;\n//   country: string;\n//   rank: number;\n//   points: number;\n// }\n\n// interface ApiResponse {\n//   rankings: Array<{\n//     id: string;\n//     name: string;\n//     country: string;\n//     rank: number;\n//     points: number;\n//   }>;\n// }\n\n// const PlayersPage: React.FC = () => {\n//   const [players, setPlayers] = useState<Player[]>([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState<string | null>(null);\n\n//   useEffect(() => {\n//     const fetchPlayers = async () => {\n//       try {\n//         const apiKey = 'mI0K6O5QLl4C7PBOxGl46rBnfaemkzs0SOVokjP';\n//         const url = `https://api.sportradar.com/golf/trial/v3/en/players/wgr/2025/rankings.json?api_key=${apiKey}`;\n        \n//         const response = await fetch(url);\n        \n//         if (!response.ok) {\n//           throw new Error(`HTTP error! status: ${response.status}`);\n//         }\n        \n//         const data: ApiResponse = await response.json();\n        \n//         if (data.rankings && Array.isArray(data.rankings)) {\n//           setPlayers(data.rankings.slice(0, 20)); // Show top 20 players\n//         } else {\n//           throw new Error('Invalid data format');\n//         }\n//       } catch (err) {\n//         console.error('Error fetching players:', err);\n//         setError('Failed to load player data');\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchPlayers();\n//   }, []);\n\n//   const renderPlayerCard = (player: Player | null, index: number) => (\n//     <div \n//       key={index}\n//       style={{\n//         border: '1px solid #ddd',\n//         borderRadius: '8px',\n//         padding: '1.5rem',\n//         backgroundColor: '#f9f9f9',\n//         textAlign: 'center'\n//       }}\n//     >\n//       {player ? (\n//         <>\n//           <div style={{\n//             fontSize: '2rem',\n//             fontWeight: 'bold',\n//             color: '#2c5530',\n//             marginBottom: '0.5rem'\n//           }}>\n//             #{player.rank}\n//           </div>\n//           <h3 style={{\n//             margin: '0.5rem 0',\n//             color: '#333'\n//           }}>\n//             {player.name}\n//           </h3>\n//           <p style={{\n//             color: '#666',\n//             margin: '0.5rem 0'\n//           }}>\n//             {player.country}\n//           </p>\n//           <div style={{\n//             backgroundColor: '#2c5530',\n//             color: 'white',\n//             padding: '0.5rem',\n//             borderRadius: '4px',\n//             fontSize: '0.9rem'\n//           }}>\n//             {player.points} points\n//           </div>\n//         </>\n//       ) : (\n//         <>\n//           <div style={{\n//             fontSize: '2rem',\n//             fontWeight: 'bold',\n//             color: '#999',\n//             marginBottom: '0.5rem'\n//           }}>\n//             #--\n//           </div>\n//           <h3 style={{\n//             margin: '0.5rem 0',\n//             color: '#999'\n//           }}>\n//             TBD\n//           </h3>\n//           <p style={{\n//             color: '#999',\n//             margin: '0.5rem 0'\n//           }}>\n//             TBD\n//           </p>\n//           <div style={{\n//             backgroundColor: '#999',\n//             color: 'white',\n//             padding: '0.5rem',\n//             borderRadius: '4px',\n//             fontSize: '0.9rem'\n//           }}>\n//             TBD points\n//           </div>\n//         </>\n//       )}\n//     </div>\n//   );\n\n//   return (\n//     <div>\n//       <header style={{ textAlign: 'center', marginBottom: '2rem' }}>\n//         <h1 style={{ \n//           fontSize: '2.5rem', \n//           color: '#2c5530',\n//           marginBottom: '1rem'\n//         }}>\n//           World Golf Rankings\n//         </h1>\n//         <p style={{ \n//           fontSize: '1.1rem', \n//           color: '#666'\n//         }}>\n//           Current top players in professional golf\n//         </p>\n//       </header>\n\n//       {loading && (\n//         <div style={{ textAlign: 'center', padding: '2rem' }}>\n//           <p style={{ fontSize: '1.2rem', color: '#666' }}>Loading players...</p>\n//         </div>\n//       )}\n\n//       {error && (\n//         <div style={{ \n//           textAlign: 'center', \n//           padding: '2rem',\n//           backgroundColor: '#ffe6e6',\n//           border: '1px solid #ffb3b3',\n//           borderRadius: '8px',\n//           marginBottom: '2rem'\n//         }}>\n//           <p style={{ color: '#cc0000', fontSize: '1.1rem' }}>{error}</p>\n//         </div>\n//       )}\n\n//       <div style={{ \n//         display: 'grid', \n//         gridTemplateColumns: 'repeat(auto-fill, minmax(280px, 1fr))',\n//         gap: '1.5rem',\n//         marginBottom: '2rem'\n//       }}>\n//         {Array(20).fill(null).map((_, index) => \n//           renderPlayerCard(players[index] || null, index)\n//         )}\n//       </div>\n\n//       <footer style={{ \n//         textAlign: 'center', \n//         padding: '2rem 0',\n//         borderTop: '1px solid #eee',\n//         color: '#666'\n//       }}>\n//         <p>Data provided by Sportradar API</p>\n//       </footer>\n//     </div>\n//   );\n// };\n\n// export default PlayersPage;\n"],"mappings":"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,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACtD,EAAA,CArMID,WAAqB;AAAA4D,EAAA,GAArB5D,WAAqB;AAuM3B,eAAeA,WAAW;;AAE1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}