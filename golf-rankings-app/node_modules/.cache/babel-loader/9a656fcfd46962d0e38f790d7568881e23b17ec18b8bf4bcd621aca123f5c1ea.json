{"ast":null,"code":"var _jsxFileName = \"/Users/michaelgarchitorena/Documents/GitHub/golf_project/golf-rankings-app/src/CreateGroupPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateGroupPage = () => {\n  _s();\n  const [groupName, setGroupName] = useState(\"\");\n  const [isPrivate, setIsPrivate] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!groupName.trim()) return;\n    setIsSubmitting(true);\n    try {\n      // Simulate API call to create a group\n      const response = await fetch(\"/api/groups\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          groupName,\n          isPrivate\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to create group\");\n      }\n      alert(\"Group created successfully!\");\n      setGroupName(\"\");\n      setIsPrivate(false);\n    } catch (error) {\n      console.error(error);\n      alert(\"An error occurred while creating the group.\");\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-group-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Create a New Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"create-group-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"groupName\",\n          children: \"Group Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"groupName\",\n          value: groupName,\n          onChange: e => setGroupName(e.target.value),\n          className: \"text-input\",\n          disabled: isSubmitting,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: \"isPrivate\",\n          checked: isPrivate,\n          onChange: e => setIsPrivate(e.target.checked),\n          className: \"checkbox-input\",\n          disabled: isSubmitting\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"isPrivate\",\n          className: \"checkbox-label\",\n          children: \"Private Group (invite only)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-buttons\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn-primary\",\n          disabled: isSubmitting || !groupName.trim(),\n          children: \"Create Group\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(CreateGroupPage, \"1c95izmmhlH2+TgI3aJiQBJ3mNg=\");\n_c = CreateGroupPage;\nexport default CreateGroupPage;\nvar _c;\n$RefreshReg$(_c, \"CreateGroupPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CreateGroupPage","_s","groupName","setGroupName","isPrivate","setIsPrivate","isSubmitting","setIsSubmitting","handleSubmit","e","preventDefault","trim","response","fetch","method","headers","body","JSON","stringify","ok","Error","alert","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","disabled","required","checked","_c","$RefreshReg$"],"sources":["/Users/michaelgarchitorena/Documents/GitHub/golf_project/golf-rankings-app/src/CreateGroupPage.tsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst CreateGroupPage: React.FC = () => {\n  const [groupName, setGroupName] = useState(\"\");\n  const [isPrivate, setIsPrivate] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!groupName.trim()) return;\n\n    setIsSubmitting(true);\n\n    try {\n      // Simulate API call to create a group\n      const response = await fetch(\"/api/groups\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ groupName, isPrivate }),\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Failed to create group\");\n      }\n\n      alert(\"Group created successfully!\");\n      setGroupName(\"\");\n      setIsPrivate(false);\n    } catch (error) {\n      console.error(error);\n      alert(\"An error occurred while creating the group.\");\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <div className=\"create-group-page\">\n      <h1>Create a New Group</h1>\n      <form onSubmit={handleSubmit} className=\"create-group-form\">\n        <div className=\"form-group\">\n          <label htmlFor=\"groupName\">Group Name</label>\n          <input\n            type=\"text\"\n            id=\"groupName\"\n            value={groupName}\n            onChange={(e) => setGroupName(e.target.value)}\n            className=\"text-input\"\n            disabled={isSubmitting}\n            required\n          />\n        </div>\n\n        <div className=\"form-group\">\n          <input\n            type=\"checkbox\"\n            id=\"isPrivate\"\n            checked={isPrivate}\n            onChange={(e) => setIsPrivate(e.target.checked)}\n            className=\"checkbox-input\"\n            disabled={isSubmitting}\n          />\n          <label htmlFor=\"isPrivate\" className=\"checkbox-label\">\n            Private Group (invite only)\n          </label>\n        </div>\n\n        <div className=\"form-buttons\">\n          <button\n            type=\"submit\"\n            className=\"btn-primary\"\n            disabled={isSubmitting || !groupName.trim()}\n          >\n            Create Group\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateGroupPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}