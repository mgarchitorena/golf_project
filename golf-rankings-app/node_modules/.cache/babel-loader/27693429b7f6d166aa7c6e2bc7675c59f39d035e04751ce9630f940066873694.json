{"ast":null,"code":"var _jsxFileName = \"/Users/michaelgarchitorena/Downloads/golf_project/golf-rankings-app/src/PlayersPage.tsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\nimport { useEffect, useState } from 'react';\nimport './PlayersPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PlayersPage = () => {\n  _s();\n  const [players, setPlayers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [debugInfo, setDebugInfo] = useState('');\n  useEffect(() => {\n    const fetchPlayers = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        setDebugInfo('Starting API call...');\n        const apiKey = 'mI0K6O5QLl4C7PBOxGl46rBnfaemkzs0SOVokjP';\n\n        // Updated endpoints based on official Sportradar docs\n        const possibleUrls = ['https://api.sportradar.com/golf/trial/v3/en/players/wgr/2025/rankings.json'];\n        let lastError = null;\n        for (const url of possibleUrls) {\n          try {\n            console.log(`Trying URL: ${url}`);\n            setDebugInfo(`Trying: ${url.split('?')[0]}`);\n            const response = await fetch(url, {\n              method: 'GET',\n              headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'User-Agent': 'GolfApp/1.0'\n              },\n              mode: 'cors' // Enable CORS\n            });\n            console.log(`Response status: ${response.status}`);\n            if (response.status === 403) {\n              throw new Error('API Key Invalid: Your Sportradar API key may be expired or invalid');\n            }\n            if (response.status === 404) {\n              console.log(`Endpoint not found: ${url}`);\n              lastError = new Error(`Endpoint not found: ${url}`);\n              continue; // Try next URL\n            }\n            if (!response.ok) {\n              const errorText = await response.text();\n              console.error(`API Error:`, errorText);\n              throw new Error(`HTTP ${response.status}: ${errorText.substring(0, 200)}`);\n            }\n            const data = await response.json();\n            console.log('Raw API Response:', data);\n            console.log('Response keys:', Object.keys(data));\n\n            // Try to extract players from different possible response structures\n            let playersData = [];\n\n            // Check for Official World Golf Ranking structure\n            if (data.rankings && Array.isArray(data.rankings)) {\n              playersData = data.rankings.map((player, index) => ({\n                id: player.id || `player-${index + 1}`,\n                name: player.name || 'Unknown Player',\n                country: player.country || player.nationality || 'Unknown',\n                rank: player.rank || player.position || index + 1,\n                points: player.points || player.average_points || 0\n              }));\n            } else if (data.players && Array.isArray(data.players)) {\n              playersData = data.players.map((player, index) => ({\n                id: player.id || `player-${index + 1}`,\n                name: player.name || player.full_name || 'Unknown Player',\n                country: player.country || player.nationality || 'Unknown',\n                rank: index + 1,\n                // Assume they're in ranking order\n                points: player.points || 0\n              }));\n            } else if (Array.isArray(data)) {\n              playersData = data.map((player, index) => ({\n                id: player.id || `player-${index + 1}`,\n                name: player.name || player.full_name || 'Unknown Player',\n                country: player.country || player.nationality || 'Unknown',\n                rank: player.rank || index + 1,\n                points: player.points || 0\n              }));\n            } else {\n              // Look for any array in the response\n              const possibleArrays = Object.entries(data).filter(([key, value]) => Array.isArray(value)).map(([key, value]) => ({\n                key,\n                value: value\n              }));\n              if (possibleArrays.length > 0) {\n                const arrayData = possibleArrays[0].value;\n                playersData = arrayData.map((player, index) => ({\n                  id: player.id || `player-${index + 1}`,\n                  name: player.name || player.full_name || 'Unknown Player',\n                  country: player.country || player.nationality || 'Unknown',\n                  rank: player.rank || index + 1,\n                  points: player.points || 0\n                }));\n                setDebugInfo(`Found ${playersData.length} players in '${possibleArrays[0].key}' field`);\n              } else {\n                console.log('Unexpected data structure:', data);\n                setDebugInfo(`Unexpected response format. Keys: ${Object.keys(data).join(', ')}`);\n                throw new Error(`No player array found. Available keys: ${Object.keys(data).join(', ')}`);\n              }\n            }\n            if (playersData.length === 0) {\n              throw new Error('No player data found in response');\n            }\n\n            // Clean and validate the data\n            const validPlayers = playersData.filter(player => player && player.name && player.name !== 'Unknown Player').slice(0, 20); // Top 20 players\n\n            if (validPlayers.length === 0) {\n              throw new Error('No valid player data after filtering');\n            }\n            setPlayers(validPlayers);\n            setDebugInfo(`✅ Successfully loaded ${validPlayers.length} players from ${url.split('?')[0]}`);\n            setError(null);\n            return; // Success, exit the loop\n          } catch (err) {\n            console.error(`Error with URL ${url}:`, err);\n            lastError = err;\n\n            // Don't continue if it's an auth error\n            if (err.message.includes('API Key Invalid')) {\n              throw err;\n            }\n            continue; // Try next URL\n          }\n        }\n\n        // If we get here, all URLs failed\n        throw lastError || new Error('All API endpoints failed');\n      } catch (err) {\n        console.error('Final API Error:', err);\n        let errorMessage = 'Unknown error occurred';\n        if (err.message.includes('API Key Invalid')) {\n          errorMessage = '🔑 API Key Issue: Your Sportradar API key appears to be invalid or expired. Check your account at developer.sportradar.com';\n        } else if (err.message.includes('CORS')) {\n          errorMessage = '🌐 CORS Error: Browser blocked the request. You may need to use a backend proxy or try a different approach.';\n        } else if (err.message.includes('Failed to fetch') || err.message.includes('NetworkError')) {\n          errorMessage = '🌐 Network Error: Unable to reach Sportradar API. Check your internet connection.';\n        } else if (err.message.includes('No player')) {\n          errorMessage = `📊 Data Format Issue: ${err.message}`;\n        } else {\n          errorMessage = `❌ API Error: ${err.message}`;\n        }\n        setError(errorMessage);\n        setDebugInfo(`Error: ${err.message}`);\n        setPlayers([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPlayers();\n  }, []);\n  const renderPlayerCard = (player, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player-card\",\n    children: player ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-rank\",\n        children: [\"#\", player.rank]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"player-name\",\n        children: player.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"player-country\",\n        children: player.country\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-points\",\n        children: typeof player.points === 'number' && player.points > 0 ? `${player.points.toFixed(3)} points` : 'N/A points'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-rank placeholder\",\n        children: \"#--\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"player-name placeholder\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"player-country placeholder\",\n        children: \"--\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-points placeholder\",\n        children: \"-- points\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 192,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"players-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"page-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"World Golf Rankings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Current top players in professional golf\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), debugInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"debug-info\",\n      children: /*#__PURE__*/_jsxDEV(\"small\", {\n        children: [\"Debug: \", debugInfo]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading players from Sportradar API...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDEA8 API Issue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Error:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 14\n        }, this), \" \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"details\", {\n        children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n          children: \"Troubleshooting Steps\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Check API Key:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 19\n            }, this), \" Visit \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"https://developer.sportradar.com\",\n              target: \"_blank\",\n              children: \"developer.sportradar.com\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 57\n            }, this), \" to verify your API key status\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Try New Key:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 19\n            }, this), \" Your trial key might be expired - create a new account if needed\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Check Quota:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 19\n            }, this), \" You might have exceeded your API call limit\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Verify Endpoints:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 19\n            }, this), \" Sportradar may have changed their endpoint URLs\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Browser Console:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 19\n            }, this), \" Check for detailed error messages in developer tools\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"players-grid\",\n      children: Array(20).fill(null).map((_, index) => renderPlayerCard(players[index] || null, index))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"page-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: players.length > 0 ? `Showing ${players.length} players • Data provided by Sportradar API` : 'Data provided by Sportradar API'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 5\n  }, this);\n};\n_s(PlayersPage, \"S8SLtHTQnI4PoNbX0K/9uIdYs0Y=\");\n_c = PlayersPage;\nexport default PlayersPage;\n// import React, { useState, useEffect } from 'react';\n\n// interface Player {\n//   id: string;\n//   name: string;\n//   country: string;\n//   rank: number;\n//   points: number;\n// }\n\n// interface ApiResponse {\n//   rankings: Array<{\n//     id: string;\n//     name: string;\n//     country: string;\n//     rank: number;\n//     points: number;\n//   }>;\n// }\n\n// const PlayersPage: React.FC = () => {\n//   const [players, setPlayers] = useState<Player[]>([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState<string | null>(null);\n\n//   useEffect(() => {\n//     const fetchPlayers = async () => {\n//       try {\n//         const apiKey = 'mI0K6O5QLl4C7PBOxGl46rBnfaemkzs0SOVokjP';\n//         const url = `https://api.sportradar.com/golf/trial/v3/en/players/wgr/2025/rankings.json?api_key=${apiKey}`;\n\n//         const response = await fetch(url);\n\n//         if (!response.ok) {\n//           throw new Error(`HTTP error! status: ${response.status}`);\n//         }\n\n//         const data: ApiResponse = await response.json();\n\n//         if (data.rankings && Array.isArray(data.rankings)) {\n//           setPlayers(data.rankings.slice(0, 20)); // Show top 20 players\n//         } else {\n//           throw new Error('Invalid data format');\n//         }\n//       } catch (err) {\n//         console.error('Error fetching players:', err);\n//         setError('Failed to load player data');\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchPlayers();\n//   }, []);\n\n//   const renderPlayerCard = (player: Player | null, index: number) => (\n//     <div \n//       key={index}\n//       style={{\n//         border: '1px solid #ddd',\n//         borderRadius: '8px',\n//         padding: '1.5rem',\n//         backgroundColor: '#f9f9f9',\n//         textAlign: 'center'\n//       }}\n//     >\n//       {player ? (\n//         <>\n//           <div style={{\n//             fontSize: '2rem',\n//             fontWeight: 'bold',\n//             color: '#2c5530',\n//             marginBottom: '0.5rem'\n//           }}>\n//             #{player.rank}\n//           </div>\n//           <h3 style={{\n//             margin: '0.5rem 0',\n//             color: '#333'\n//           }}>\n//             {player.name}\n//           </h3>\n//           <p style={{\n//             color: '#666',\n//             margin: '0.5rem 0'\n//           }}>\n//             {player.country}\n//           </p>\n//           <div style={{\n//             backgroundColor: '#2c5530',\n//             color: 'white',\n//             padding: '0.5rem',\n//             borderRadius: '4px',\n//             fontSize: '0.9rem'\n//           }}>\n//             {player.points} points\n//           </div>\n//         </>\n//       ) : (\n//         <>\n//           <div style={{\n//             fontSize: '2rem',\n//             fontWeight: 'bold',\n//             color: '#999',\n//             marginBottom: '0.5rem'\n//           }}>\n//             #--\n//           </div>\n//           <h3 style={{\n//             margin: '0.5rem 0',\n//             color: '#999'\n//           }}>\n//             TBD\n//           </h3>\n//           <p style={{\n//             color: '#999',\n//             margin: '0.5rem 0'\n//           }}>\n//             TBD\n//           </p>\n//           <div style={{\n//             backgroundColor: '#999',\n//             color: 'white',\n//             padding: '0.5rem',\n//             borderRadius: '4px',\n//             fontSize: '0.9rem'\n//           }}>\n//             TBD points\n//           </div>\n//         </>\n//       )}\n//     </div>\n//   );\n\n//   return (\n//     <div>\n//       <header style={{ textAlign: 'center', marginBottom: '2rem' }}>\n//         <h1 style={{ \n//           fontSize: '2.5rem', \n//           color: '#2c5530',\n//           marginBottom: '1rem'\n//         }}>\n//           World Golf Rankings\n//         </h1>\n//         <p style={{ \n//           fontSize: '1.1rem', \n//           color: '#666'\n//         }}>\n//           Current top players in professional golf\n//         </p>\n//       </header>\n\n//       {loading && (\n//         <div style={{ textAlign: 'center', padding: '2rem' }}>\n//           <p style={{ fontSize: '1.2rem', color: '#666' }}>Loading players...</p>\n//         </div>\n//       )}\n\n//       {error && (\n//         <div style={{ \n//           textAlign: 'center', \n//           padding: '2rem',\n//           backgroundColor: '#ffe6e6',\n//           border: '1px solid #ffb3b3',\n//           borderRadius: '8px',\n//           marginBottom: '2rem'\n//         }}>\n//           <p style={{ color: '#cc0000', fontSize: '1.1rem' }}>{error}</p>\n//         </div>\n//       )}\n\n//       <div style={{ \n//         display: 'grid', \n//         gridTemplateColumns: 'repeat(auto-fill, minmax(280px, 1fr))',\n//         gap: '1.5rem',\n//         marginBottom: '2rem'\n//       }}>\n//         {Array(20).fill(null).map((_, index) => \n//           renderPlayerCard(players[index] || null, index)\n//         )}\n//       </div>\n\n//       <footer style={{ \n//         textAlign: 'center', \n//         padding: '2rem 0',\n//         borderTop: '1px solid #eee',\n//         color: '#666'\n//       }}>\n//         <p>Data provided by Sportradar API</p>\n//       </footer>\n//     </div>\n//   );\n// };\n\n// export default PlayersPage;\nvar _c;\n$RefreshReg$(_c, \"PlayersPage\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","PlayersPage","_s","players","setPlayers","loading","setLoading","error","setError","debugInfo","setDebugInfo","fetchPlayers","apiKey","possibleUrls","lastError","url","console","log","split","response","fetch","method","headers","mode","status","Error","ok","errorText","text","substring","data","json","Object","keys","playersData","rankings","Array","isArray","map","player","index","id","name","country","nationality","rank","position","points","average_points","full_name","possibleArrays","entries","filter","key","value","length","arrayData","join","validPlayers","slice","err","message","includes","errorMessage","renderPlayerCard","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","href","target","fill","_","_c","$RefreshReg$"],"sources":["/Users/michaelgarchitorena/Downloads/golf_project/golf-rankings-app/src/PlayersPage.tsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\nimport { useEffect, useState } from 'react';\nimport './PlayersPage.css';\n\ninterface Player {\n  id: string;\n  name: string;\n  country: string;\n  rank: number;\n  points: number;\n}\n\ninterface ApiResponse {\n  rankings?: Player[];\n  players?: Player[];\n  data?: any;\n  [key: string]: any;\n}\n\nconst PlayersPage: React.FC = () => {\n  const [players, setPlayers] = useState<Player[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [debugInfo, setDebugInfo] = useState<string>('');\n\n  useEffect(() => {\n    const fetchPlayers = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        setDebugInfo('Starting API call...');\n        \n        const apiKey = 'mI0K6O5QLl4C7PBOxGl46rBnfaemkzs0SOVokjP';\n        \n        // Updated endpoints based on official Sportradar docs\n        const possibleUrls = [\n          'https://api.sportradar.com/golf/trial/v3/en/players/wgr/2025/rankings.json'        ];\n        \n        let lastError = null;\n        \n        for (const url of possibleUrls) {\n          try {\n            console.log(`Trying URL: ${url}`);\n            setDebugInfo(`Trying: ${url.split('?')[0]}`);\n            \n            const response = await fetch(url, {\n              method: 'GET',\n              headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'User-Agent': 'GolfApp/1.0',\n              },\n              mode: 'cors', // Enable CORS\n            });\n            \n            console.log(`Response status: ${response.status}`);\n            \n            if (response.status === 403) {\n              throw new Error('API Key Invalid: Your Sportradar API key may be expired or invalid');\n            }\n            \n            if (response.status === 404) {\n              console.log(`Endpoint not found: ${url}`);\n              lastError = new Error(`Endpoint not found: ${url}`);\n              continue; // Try next URL\n            }\n            \n            if (!response.ok) {\n              const errorText = await response.text();\n              console.error(`API Error:`, errorText);\n              throw new Error(`HTTP ${response.status}: ${errorText.substring(0, 200)}`);\n            }\n            \n            const data: ApiResponse = await response.json();\n            console.log('Raw API Response:', data);\n            console.log('Response keys:', Object.keys(data));\n            \n            // Try to extract players from different possible response structures\n            let playersData: Player[] = [];\n            \n            // Check for Official World Golf Ranking structure\n            if (data.rankings && Array.isArray(data.rankings)) {\n              playersData = data.rankings.map((player: any, index: number) => ({\n                id: player.id || `player-${index + 1}`,\n                name: player.name || 'Unknown Player',\n                country: player.country || player.nationality || 'Unknown',\n                rank: player.rank || player.position || index + 1,\n                points: player.points || player.average_points || 0\n              }));\n            } else if (data.players && Array.isArray(data.players)) {\n              playersData = data.players.map((player: any, index: number) => ({\n                id: player.id || `player-${index + 1}`,\n                name: player.name || player.full_name || 'Unknown Player',\n                country: player.country || player.nationality || 'Unknown',\n                rank: index + 1, // Assume they're in ranking order\n                points: player.points || 0\n              }));\n            } else if (Array.isArray(data)) {\n              playersData = data.map((player: any, index: number) => ({\n                id: player.id || `player-${index + 1}`,\n                name: player.name || player.full_name || 'Unknown Player',\n                country: player.country || player.nationality || 'Unknown',\n                rank: player.rank || index + 1,\n                points: player.points || 0\n              }));\n            } else {\n              // Look for any array in the response\n              const possibleArrays = Object.entries(data)\n                .filter(([key, value]) => Array.isArray(value))\n                .map(([key, value]) => ({ key, value: value as any[] }));\n              \n              if (possibleArrays.length > 0) {\n                const arrayData = possibleArrays[0].value;\n                playersData = arrayData.map((player: any, index: number) => ({\n                  id: player.id || `player-${index + 1}`,\n                  name: player.name || player.full_name || 'Unknown Player',\n                  country: player.country || player.nationality || 'Unknown',\n                  rank: player.rank || index + 1,\n                  points: player.points || 0\n                }));\n                setDebugInfo(`Found ${playersData.length} players in '${possibleArrays[0].key}' field`);\n              } else {\n                console.log('Unexpected data structure:', data);\n                setDebugInfo(`Unexpected response format. Keys: ${Object.keys(data).join(', ')}`);\n                throw new Error(`No player array found. Available keys: ${Object.keys(data).join(', ')}`);\n              }\n            }\n            \n            if (playersData.length === 0) {\n              throw new Error('No player data found in response');\n            }\n            \n            // Clean and validate the data\n            const validPlayers = playersData\n              .filter(player => player && player.name && player.name !== 'Unknown Player')\n              .slice(0, 20); // Top 20 players\n            \n            if (validPlayers.length === 0) {\n              throw new Error('No valid player data after filtering');\n            }\n            \n            setPlayers(validPlayers);\n            setDebugInfo(`✅ Successfully loaded ${validPlayers.length} players from ${url.split('?')[0]}`);\n            setError(null);\n            return; // Success, exit the loop\n            \n          } catch (err: any) {\n            console.error(`Error with URL ${url}:`, err);\n            lastError = err;\n            \n            // Don't continue if it's an auth error\n            if (err.message.includes('API Key Invalid')) {\n              throw err;\n            }\n            continue; // Try next URL\n          }\n        }\n        \n        // If we get here, all URLs failed\n        throw lastError || new Error('All API endpoints failed');\n        \n      } catch (err: any) {\n        console.error('Final API Error:', err);\n        \n        let errorMessage = 'Unknown error occurred';\n        \n        if (err.message.includes('API Key Invalid')) {\n          errorMessage = '🔑 API Key Issue: Your Sportradar API key appears to be invalid or expired. Check your account at developer.sportradar.com';\n        } else if (err.message.includes('CORS')) {\n          errorMessage = '🌐 CORS Error: Browser blocked the request. You may need to use a backend proxy or try a different approach.';\n        } else if (err.message.includes('Failed to fetch') || err.message.includes('NetworkError')) {\n          errorMessage = '🌐 Network Error: Unable to reach Sportradar API. Check your internet connection.';\n        } else if (err.message.includes('No player')) {\n          errorMessage = `📊 Data Format Issue: ${err.message}`;\n        } else {\n          errorMessage = `❌ API Error: ${err.message}`;\n        }\n        \n        setError(errorMessage);\n        setDebugInfo(`Error: ${err.message}`);\n        setPlayers([]);\n        \n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchPlayers();\n  }, []);\n\n  const renderPlayerCard = (player: Player | null, index: number) => (\n    <div key={index} className=\"player-card\">\n      {player ? (\n        <>\n          <div className=\"player-rank\">#{player.rank}</div>\n          <h3 className=\"player-name\">{player.name}</h3>\n          <p className=\"player-country\">{player.country}</p>\n          <div className=\"player-points\">\n            {typeof player.points === 'number' && player.points > 0\n              ? `${player.points.toFixed(3)} points`\n              : 'N/A points'\n            }\n          </div>\n        </>\n      ) : (\n        <>\n          <div className=\"player-rank placeholder\">#--</div>\n          <h3 className=\"player-name placeholder\">Loading...</h3>\n          <p className=\"player-country placeholder\">--</p>\n          <div className=\"player-points placeholder\">-- points</div>\n        </>\n      )}\n    </div>\n  );\n\n  return (\n    <div className=\"players-page\">\n      <header className=\"page-header\">\n        <h1>World Golf Rankings</h1>\n        <p>Current top players in professional golf</p>\n      </header>\n\n      {/* Debug Info */}\n      {debugInfo && (\n        <div className=\"debug-info\">\n          <small>Debug: {debugInfo}</small>\n        </div>\n      )}\n\n      {loading && (\n        <div className=\"loading-container\">\n          <p>Loading players from Sportradar API...</p>\n        </div>\n      )}\n\n      {error && (\n        <div className=\"error-container\">\n          <h3>🚨 API Issue</h3>\n          <p><strong>Error:</strong> {error}</p>\n          <details>\n            <summary>Troubleshooting Steps</summary>\n            <ul>\n              <li><strong>Check API Key:</strong> Visit <a href=\"https://developer.sportradar.com\" target=\"_blank\">developer.sportradar.com</a> to verify your API key status</li>\n              <li><strong>Try New Key:</strong> Your trial key might be expired - create a new account if needed</li>\n              <li><strong>Check Quota:</strong> You might have exceeded your API call limit</li>\n              <li><strong>Verify Endpoints:</strong> Sportradar may have changed their endpoint URLs</li>\n              <li><strong>Browser Console:</strong> Check for detailed error messages in developer tools</li>\n            </ul>\n          </details>\n        </div>\n      )}\n\n      <div className=\"players-grid\">\n        {Array(20).fill(null).map((_, index) => \n          renderPlayerCard(players[index] || null, index)\n        )}\n      </div>\n\n      <footer className=\"page-footer\">\n        <p>\n          {players.length > 0 \n            ? `Showing ${players.length} players • Data provided by Sportradar API`\n            : 'Data provided by Sportradar API'\n          }\n        </p>\n      </footer>\n    </div>\n  );\n};\n\nexport default PlayersPage;\n// import React, { useState, useEffect } from 'react';\n\n// interface Player {\n//   id: string;\n//   name: string;\n//   country: string;\n//   rank: number;\n//   points: number;\n// }\n\n// interface ApiResponse {\n//   rankings: Array<{\n//     id: string;\n//     name: string;\n//     country: string;\n//     rank: number;\n//     points: number;\n//   }>;\n// }\n\n// const PlayersPage: React.FC = () => {\n//   const [players, setPlayers] = useState<Player[]>([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState<string | null>(null);\n\n//   useEffect(() => {\n//     const fetchPlayers = async () => {\n//       try {\n//         const apiKey = 'mI0K6O5QLl4C7PBOxGl46rBnfaemkzs0SOVokjP';\n//         const url = `https://api.sportradar.com/golf/trial/v3/en/players/wgr/2025/rankings.json?api_key=${apiKey}`;\n        \n//         const response = await fetch(url);\n        \n//         if (!response.ok) {\n//           throw new Error(`HTTP error! status: ${response.status}`);\n//         }\n        \n//         const data: ApiResponse = await response.json();\n        \n//         if (data.rankings && Array.isArray(data.rankings)) {\n//           setPlayers(data.rankings.slice(0, 20)); // Show top 20 players\n//         } else {\n//           throw new Error('Invalid data format');\n//         }\n//       } catch (err) {\n//         console.error('Error fetching players:', err);\n//         setError('Failed to load player data');\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchPlayers();\n//   }, []);\n\n//   const renderPlayerCard = (player: Player | null, index: number) => (\n//     <div \n//       key={index}\n//       style={{\n//         border: '1px solid #ddd',\n//         borderRadius: '8px',\n//         padding: '1.5rem',\n//         backgroundColor: '#f9f9f9',\n//         textAlign: 'center'\n//       }}\n//     >\n//       {player ? (\n//         <>\n//           <div style={{\n//             fontSize: '2rem',\n//             fontWeight: 'bold',\n//             color: '#2c5530',\n//             marginBottom: '0.5rem'\n//           }}>\n//             #{player.rank}\n//           </div>\n//           <h3 style={{\n//             margin: '0.5rem 0',\n//             color: '#333'\n//           }}>\n//             {player.name}\n//           </h3>\n//           <p style={{\n//             color: '#666',\n//             margin: '0.5rem 0'\n//           }}>\n//             {player.country}\n//           </p>\n//           <div style={{\n//             backgroundColor: '#2c5530',\n//             color: 'white',\n//             padding: '0.5rem',\n//             borderRadius: '4px',\n//             fontSize: '0.9rem'\n//           }}>\n//             {player.points} points\n//           </div>\n//         </>\n//       ) : (\n//         <>\n//           <div style={{\n//             fontSize: '2rem',\n//             fontWeight: 'bold',\n//             color: '#999',\n//             marginBottom: '0.5rem'\n//           }}>\n//             #--\n//           </div>\n//           <h3 style={{\n//             margin: '0.5rem 0',\n//             color: '#999'\n//           }}>\n//             TBD\n//           </h3>\n//           <p style={{\n//             color: '#999',\n//             margin: '0.5rem 0'\n//           }}>\n//             TBD\n//           </p>\n//           <div style={{\n//             backgroundColor: '#999',\n//             color: 'white',\n//             padding: '0.5rem',\n//             borderRadius: '4px',\n//             fontSize: '0.9rem'\n//           }}>\n//             TBD points\n//           </div>\n//         </>\n//       )}\n//     </div>\n//   );\n\n//   return (\n//     <div>\n//       <header style={{ textAlign: 'center', marginBottom: '2rem' }}>\n//         <h1 style={{ \n//           fontSize: '2.5rem', \n//           color: '#2c5530',\n//           marginBottom: '1rem'\n//         }}>\n//           World Golf Rankings\n//         </h1>\n//         <p style={{ \n//           fontSize: '1.1rem', \n//           color: '#666'\n//         }}>\n//           Current top players in professional golf\n//         </p>\n//       </header>\n\n//       {loading && (\n//         <div style={{ textAlign: 'center', padding: '2rem' }}>\n//           <p style={{ fontSize: '1.2rem', color: '#666' }}>Loading players...</p>\n//         </div>\n//       )}\n\n//       {error && (\n//         <div style={{ \n//           textAlign: 'center', \n//           padding: '2rem',\n//           backgroundColor: '#ffe6e6',\n//           border: '1px solid #ffb3b3',\n//           borderRadius: '8px',\n//           marginBottom: '2rem'\n//         }}>\n//           <p style={{ color: '#cc0000', fontSize: '1.1rem' }}>{error}</p>\n//         </div>\n//       )}\n\n//       <div style={{ \n//         display: 'grid', \n//         gridTemplateColumns: 'repeat(auto-fill, minmax(280px, 1fr))',\n//         gap: '1.5rem',\n//         marginBottom: '2rem'\n//       }}>\n//         {Array(20).fill(null).map((_, index) => \n//           renderPlayerCard(players[index] || null, index)\n//         )}\n//       </div>\n\n//       <footer style={{ \n//         textAlign: 'center', \n//         padding: '2rem 0',\n//         borderTop: '1px solid #eee',\n//         color: '#666'\n//       }}>\n//         <p>Data provided by Sportradar API</p>\n//       </footer>\n//     </div>\n//   );\n// };\n\n// export default PlayersPage;\n"],"mappings":"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;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAA2E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}