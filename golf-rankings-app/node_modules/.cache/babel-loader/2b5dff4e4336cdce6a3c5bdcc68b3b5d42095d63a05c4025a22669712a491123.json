{"ast":null,"code":"var _jsxFileName = \"/Users/michaelgarchitorena/Downloads/golf_project/golf-rankings-app/src/PlayersPage.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"./PlayersPage.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PlayersPage = () => {\n  _s();\n  const [players, setPlayers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [debugInfo, setDebugInfo] = useState(\"\");\n  useEffect(() => {\n    const fetchPlayers = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        setDebugInfo(\"Loading data from local file...\");\n\n        // Load from local JSON file instead of API\n        const response = await fetch(\"/world_rankings.json\");\n        if (!response.ok) {\n          throw new Error(`Failed to load world_rankings.json: ${response.status} ${response.statusText}`);\n        }\n        const data = await response.json();\n        console.log(\"Raw JSON Data:\", data);\n        console.log(\"Response keys:\", Object.keys(data));\n\n        // Extract players from the specific Sportradar WGR format\n        let playersData = [];\n        if (data.players && Array.isArray(data.players)) {\n          playersData = data.players.map(player => {\n            var _player$statistics, _player$statistics2;\n            return {\n              id: player.id || \"unknown\",\n              name: `${player.first_name || \"\"} ${player.last_name || \"\"}`.trim() || \"Unknown Player\",\n              country: player.country || \"Unknown\",\n              rank: player.rank || 0,\n              points: ((_player$statistics = player.statistics) === null || _player$statistics === void 0 ? void 0 : _player$statistics.avg_points) || ((_player$statistics2 = player.statistics) === null || _player$statistics2 === void 0 ? void 0 : _player$statistics2.avg_points) || 0\n            };\n          });\n          setDebugInfo(`Found ${playersData.length} players from Sportradar WGR format`);\n        } else {\n          // Fallback to other possible formats\n          if (data.rankings && Array.isArray(data.rankings)) {\n            playersData = data.rankings.map((player, index) => ({\n              id: player.id || `player-${index + 1}`,\n              name: player.name || \"Unknown Player\",\n              country: player.country || player.nationality || \"Unknown\",\n              rank: player.rank || player.position || index + 1,\n              points: player.points || player.average_points || 0\n            }));\n          } else if (Array.isArray(data)) {\n            playersData = data.map((player, index) => ({\n              id: player.id || `player-${index + 1}`,\n              name: player.name || player.full_name || \"Unknown Player\",\n              country: player.country || player.nationality || \"Unknown\",\n              rank: player.rank || index + 1,\n              points: player.avg_points || 0\n            }));\n          } else {\n            // Look for any array in the response\n            const possibleArrays = Object.entries(data).filter(([key, value]) => Array.isArray(value)).map(([key, value]) => ({\n              key,\n              value: value\n            }));\n            if (possibleArrays.length > 0) {\n              const arrayData = possibleArrays[0].value;\n              playersData = arrayData.map((player, index) => ({\n                id: player.id || `player-${index + 1}`,\n                name: player.name || player.full_name || \"Unknown Player\",\n                country: player.country || player.nationality || \"Unknown\",\n                rank: player.rank || index + 1,\n                points: player.avg_points || 0\n              }));\n              setDebugInfo(`Found ${playersData.length} players in '${possibleArrays[0].key}' field`);\n            } else {\n              console.log(\"Unexpected data structure:\", data);\n              setDebugInfo(`Unexpected response format. Keys: ${Object.keys(data).join(\", \")}`);\n              throw new Error(`No player array found. Available keys: ${Object.keys(data).join(\", \")}`);\n            }\n          }\n        }\n        if (playersData.length === 0) {\n          throw new Error(\"No player data found in response\");\n        }\n\n        // Clean and validate the data\n        const validPlayers = playersData.filter(player => player && player.name && player.name !== \"Unknown Player\").slice(0, 20); // Top 20 players\n\n        if (validPlayers.length === 0) {\n          throw new Error(\"No valid player data after filtering\");\n        }\n        setPlayers(validPlayers);\n        setDebugInfo(`✅ Successfully loaded ${validPlayers.length} players from local file`);\n        setError(null);\n      } catch (err) {\n        console.error(\"Error loading local data:\", err);\n        let errorMessage = \"Unknown error occurred\";\n        if (err.message.includes(\"Failed to load world_rankings.json\")) {\n          errorMessage = \"📁 File Not Found: Make sure world_rankings.json is in your public folder\";\n        } else if (err.message.includes(\"Unexpected token\")) {\n          errorMessage = \"📄 JSON Parse Error: world_rankings.json contains invalid JSON\";\n        } else if (err.message.includes(\"No player\")) {\n          errorMessage = `📊 Data Format Issue: ${err.message}`;\n        } else {\n          errorMessage = `❌ Error: ${err.message}`;\n        }\n        setError(errorMessage);\n        setDebugInfo(`Error: ${err.message}`);\n        setPlayers([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPlayers();\n  }, []);\n  const renderPlayerCard = (player, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player-card\",\n    children: player ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-rank\",\n        children: [\"#\", player.rank]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"player-name\",\n        children: player.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"player-country\",\n        children: player.country\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-points\",\n        children: typeof player.points === \"number\" && player.points > 0 ? `${player.points.toFixed(3)} points` : \"N/A points\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-rank placeholder\",\n        children: \"#--\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"player-name placeholder\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"player-country placeholder\",\n        children: \"--\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-points placeholder\",\n        children: \"--Average points\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"players-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"page-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"World Golf Rankings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Current top players in professional golf\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), debugInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"debug-info\",\n      children: /*#__PURE__*/_jsxDEV(\"small\", {\n        children: [\"Debug: \", debugInfo]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading players from local data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDEA8 Data Loading Issue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Error:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this), \" \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"details\", {\n        children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n          children: \"Setup Instructions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Create the file:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, this), \" Add world_rankings.json to your public folder\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"File location:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this), \" public/world_rankings.json (in React apps)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"JSON format:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this), \" Make sure the file contains valid JSON\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Browser Console:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this), \" Check for detailed error messages\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"players-grid\",\n      children: Array(20).fill(null).map((_, index) => renderPlayerCard(players[index] || null, index))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"page-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: players.length > 0 ? `Showing ${players.length} players • Data from local file` : \"Data from local file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n};\n_s(PlayersPage, \"78SakIjO2T7YZqSErYw5xWm/j68=\");\n_c = PlayersPage;\nexport default PlayersPage;\nvar _c;\n$RefreshReg$(_c, \"PlayersPage\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","PlayersPage","_s","players","setPlayers","loading","setLoading","error","setError","debugInfo","setDebugInfo","fetchPlayers","response","fetch","ok","Error","status","statusText","data","json","console","log","Object","keys","playersData","Array","isArray","map","player","_player$statistics","_player$statistics2","id","name","first_name","last_name","trim","country","rank","points","statistics","avg_points","length","rankings","index","nationality","position","average_points","full_name","possibleArrays","entries","filter","key","value","arrayData","join","validPlayers","slice","err","errorMessage","message","includes","renderPlayerCard","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","fill","_","_c","$RefreshReg$"],"sources":["/Users/michaelgarchitorena/Downloads/golf_project/golf-rankings-app/src/PlayersPage.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./PlayersPage.css\";\n\ninterface Player {\n  id: string;\n  name: string;\n  country: string;\n  rank: number;\n  points: number;\n}\n\ninterface ApiResponse {\n  rankings?: Player[];\n  players?: Player[];\n  data?: any;\n  [key: string]: any;\n}\n\nconst PlayersPage: React.FC = () => {\n  const [players, setPlayers] = useState<Player[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [debugInfo, setDebugInfo] = useState<string>(\"\");\n\n  useEffect(() => {\n    const fetchPlayers = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        setDebugInfo(\"Loading data from local file...\");\n\n        // Load from local JSON file instead of API\n        const response = await fetch(\"/world_rankings.json\");\n\n        if (!response.ok) {\n          throw new Error(\n            `Failed to load world_rankings.json: ${response.status} ${response.statusText}`\n          );\n        }\n\n        const data: ApiResponse = await response.json();\n        console.log(\"Raw JSON Data:\", data);\n        console.log(\"Response keys:\", Object.keys(data));\n\n        // Extract players from the specific Sportradar WGR format\n        let playersData: Player[] = [];\n\n        if (data.players && Array.isArray(data.players)) {\n          playersData = data.players.map((player: any) => ({\n            id: player.id || \"unknown\",\n            name:\n              `${player.first_name || \"\"} ${player.last_name || \"\"}`.trim() ||\n              \"Unknown Player\",\n            country: player.country || \"Unknown\",\n            rank: player.rank || 0,\n            points:\n              player.statistics?.avg_points ||\n              player.statistics?.avg_points ||\n              0,\n          }));\n          setDebugInfo(\n            `Found ${playersData.length} players from Sportradar WGR format`\n          );\n        } else {\n          // Fallback to other possible formats\n          if (data.rankings && Array.isArray(data.rankings)) {\n            playersData = data.rankings.map((player: any, index: number) => ({\n              id: player.id || `player-${index + 1}`,\n              name: player.name || \"Unknown Player\",\n              country: player.country || player.nationality || \"Unknown\",\n              rank: player.rank || player.position || index + 1,\n              points: player.points || player.average_points || 0,\n            }));\n          } else if (Array.isArray(data)) {\n            playersData = data.map((player: any, index: number) => ({\n              id: player.id || `player-${index + 1}`,\n              name: player.name || player.full_name || \"Unknown Player\",\n              country: player.country || player.nationality || \"Unknown\",\n              rank: player.rank || index + 1,\n              points: player.avg_points || 0,\n            }));\n          } else {\n            // Look for any array in the response\n            const possibleArrays = Object.entries(data)\n              .filter(([key, value]) => Array.isArray(value))\n              .map(([key, value]) => ({ key, value: value as any[] }));\n\n            if (possibleArrays.length > 0) {\n              const arrayData = possibleArrays[0].value;\n              playersData = arrayData.map((player: any, index: number) => ({\n                id: player.id || `player-${index + 1}`,\n                name: player.name || player.full_name || \"Unknown Player\",\n                country: player.country || player.nationality || \"Unknown\",\n                rank: player.rank || index + 1,\n                points: player.avg_points || 0,\n              }));\n              setDebugInfo(\n                `Found ${playersData.length} players in '${possibleArrays[0].key}' field`\n              );\n            } else {\n              console.log(\"Unexpected data structure:\", data);\n              setDebugInfo(\n                `Unexpected response format. Keys: ${Object.keys(data).join(\n                  \", \"\n                )}`\n              );\n              throw new Error(\n                `No player array found. Available keys: ${Object.keys(\n                  data\n                ).join(\", \")}`\n              );\n            }\n          }\n        }\n\n        if (playersData.length === 0) {\n          throw new Error(\"No player data found in response\");\n        }\n\n        // Clean and validate the data\n        const validPlayers = playersData\n          .filter(\n            (player) =>\n              player && player.name && player.name !== \"Unknown Player\"\n          )\n          .slice(0, 20); // Top 20 players\n\n        if (validPlayers.length === 0) {\n          throw new Error(\"No valid player data after filtering\");\n        }\n\n        setPlayers(validPlayers);\n        setDebugInfo(\n          `✅ Successfully loaded ${validPlayers.length} players from local file`\n        );\n        setError(null);\n      } catch (err: any) {\n        console.error(\"Error loading local data:\", err);\n\n        let errorMessage = \"Unknown error occurred\";\n\n        if (err.message.includes(\"Failed to load world_rankings.json\")) {\n          errorMessage =\n            \"📁 File Not Found: Make sure world_rankings.json is in your public folder\";\n        } else if (err.message.includes(\"Unexpected token\")) {\n          errorMessage =\n            \"📄 JSON Parse Error: world_rankings.json contains invalid JSON\";\n        } else if (err.message.includes(\"No player\")) {\n          errorMessage = `📊 Data Format Issue: ${err.message}`;\n        } else {\n          errorMessage = `❌ Error: ${err.message}`;\n        }\n\n        setError(errorMessage);\n        setDebugInfo(`Error: ${err.message}`);\n        setPlayers([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchPlayers();\n  }, []);\n\n  const renderPlayerCard = (player: Player | null, index: number) => (\n    <div key={index} className=\"player-card\">\n      {player ? (\n        <>\n          <div className=\"player-rank\">#{player.rank}</div>\n          <h3 className=\"player-name\">{player.name}</h3>\n          <p className=\"player-country\">{player.country}</p>\n          <div className=\"player-points\">\n            {typeof player.points === \"number\" && player.points > 0\n              ? `${player.points.toFixed(3)} points`\n              : \"N/A points\"}\n          </div>\n        </>\n      ) : (\n        <>\n          <div className=\"player-rank placeholder\">#--</div>\n          <h3 className=\"player-name placeholder\">Loading...</h3>\n          <p className=\"player-country placeholder\">--</p>\n          <div className=\"player-points placeholder\">--Average points</div>\n        </>\n      )}\n    </div>\n  );\n\n  return (\n    <div className=\"players-page\">\n      <header className=\"page-header\">\n        <h1>World Golf Rankings</h1>\n        <p>Current top players in professional golf</p>\n      </header>\n\n      {/* Debug Info */}\n      {debugInfo && (\n        <div className=\"debug-info\">\n          <small>Debug: {debugInfo}</small>\n        </div>\n      )}\n\n      {loading && (\n        <div className=\"loading-container\">\n          <p>Loading players from local data...</p>\n        </div>\n      )}\n\n      {error && (\n        <div className=\"error-container\">\n          <h3>🚨 Data Loading Issue</h3>\n          <p>\n            <strong>Error:</strong> {error}\n          </p>\n          <details>\n            <summary>Setup Instructions</summary>\n            <ul>\n              <li>\n                <strong>Create the file:</strong> Add world_rankings.json to\n                your public folder\n              </li>\n              <li>\n                <strong>File location:</strong> public/world_rankings.json (in\n                React apps)\n              </li>\n              <li>\n                <strong>JSON format:</strong> Make sure the file contains valid\n                JSON\n              </li>\n              {/* <li><strong>Sample structure:</strong> {\"id\": \"...\", \"name\": \"World Golf Ranking\", \"players\": [{\"id\": \"...\", \"first_name\": \"Scottie\", \"last_name\": \"Scheffler\", \"country\": \"UNITED STATES\", \"rank\": 1, \"statistics\": {\"points\": 752.5}}]}</li> */}\n              <li>\n                <strong>Browser Console:</strong> Check for detailed error\n                messages\n              </li>\n            </ul>\n          </details>\n        </div>\n      )}\n\n      <div className=\"players-grid\">\n        {Array(20)\n          .fill(null)\n          .map((_, index) => renderPlayerCard(players[index] || null, index))}\n      </div>\n\n      <footer className=\"page-footer\">\n        <p>\n          {players.length > 0\n            ? `Showing ${players.length} players • Data from local file`\n            : \"Data from local file\"}\n        </p>\n      </footer>\n    </div>\n  );\n};\n\nexport default PlayersPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}