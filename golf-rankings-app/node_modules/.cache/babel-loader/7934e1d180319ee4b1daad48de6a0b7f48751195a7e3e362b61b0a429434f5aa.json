{"ast":null,"code":"var _jsxFileName = \"/Users/michaelgarchitorena/Downloads/golf_project/golf-rankings-app/src/PlayersPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './PlayersPage.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PlayersPage = () => {\n  _s();\n  const [players, setPlayers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [debugInfo, setDebugInfo] = useState('');\n  useEffect(() => {\n    const fetchPlayers = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        setDebugInfo('Starting API call...');\n\n        // Only try the backend proxy - no more direct API calls\n        const backendUrl = 'http://localhost:5000/api/golf/rankings';\n        console.log(`Fetching from backend: ${backendUrl}`);\n        setDebugInfo(`Calling backend: ${backendUrl}`);\n        const response = await fetch(backendUrl, {\n          method: 'GET',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          }\n        });\n        console.log(`Response status: ${response.status}`);\n        // console.log(`Response headers:`, [...response.headers.entries()]);\n\n        if (!response.ok) {\n          const errorText = await response.text();\n          console.error(`Backend error:`, errorText);\n          throw new Error(`Backend Error (${response.status}): ${errorText}`);\n        }\n        const data = await response.json();\n        console.log('Raw API Response:', data);\n        console.log('Response keys:', Object.keys(data));\n\n        // Try to extract players from different possible response structures\n        let playersData = [];\n        if (data.rankings && Array.isArray(data.rankings)) {\n          playersData = data.rankings;\n          setDebugInfo(`Found ${playersData.length} players in 'rankings' field`);\n        } else if (data.players && Array.isArray(data.players)) {\n          playersData = data.players;\n          setDebugInfo(`Found ${playersData.length} players in 'players' field`);\n        } else if (Array.isArray(data)) {\n          playersData = data;\n          setDebugInfo(`Found ${playersData.length} players in root array`);\n        } else {\n          // Check for nested data structures\n          const possibleArrays = Object.values(data).filter(Array.isArray);\n          if (possibleArrays.length > 0) {\n            playersData = possibleArrays[0];\n            setDebugInfo(`Found ${playersData.length} players in nested array`);\n          } else {\n            console.log('Unexpected data structure:', data);\n            setDebugInfo(`Unexpected response format. Keys: ${Object.keys(data).join(', ')}`);\n            throw new Error(`No player array found in response. Available keys: ${Object.keys(data).join(', ')}`);\n          }\n        }\n        if (playersData.length === 0) {\n          throw new Error('No player data found in response');\n        }\n\n        // Validate and clean the data\n        const validPlayers = playersData.filter(player => player && player.name && player.rank).map(player => ({\n          id: player.id || `player-${player.rank}`,\n          name: player.name,\n          country: player.country || 'Unknown',\n          rank: Number(player.rank),\n          points: Number(player.points) || 0\n        })).sort((a, b) => a.rank - b.rank).slice(0, 20); // Top 20 players\n\n        setPlayers(validPlayers);\n        setDebugInfo(`Successfully loaded ${validPlayers.length} valid players`);\n        setError(null); // Clear any previous errors\n      } catch (err) {\n        console.error('API Error:', err);\n\n        // Provide specific error messages\n        let errorMessage = 'Unknown error occurred';\n        if (err.message.includes('Failed to fetch') || err.message.includes('NetworkError')) {\n          errorMessage = 'Cannot connect to backend server. Make sure your backend is running on http://localhost:5000';\n        } else if (err.message.includes('Backend Error')) {\n          errorMessage = err.message;\n        } else if (err.message.includes('No player')) {\n          errorMessage = `API returned data but no players found: ${err.message}`;\n        } else {\n          errorMessage = `API Error: ${err.message}`;\n        }\n        setError(errorMessage);\n        setDebugInfo(`Error: ${err.message}`);\n\n        // Don't load mock data - let's fix the real API\n        setPlayers([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPlayers();\n  }, []);\n  const renderPlayerCard = (player, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player-card\",\n    children: player ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-rank\",\n        children: [\"#\", player.rank]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"player-name\",\n        children: player.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"player-country\",\n        children: player.country\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-points\",\n        children: typeof player.points === 'number' && player.points > 0 ? `${player.points.toFixed(3)} points` : 'N/A points'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-rank placeholder\",\n        children: \"#--\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"player-name placeholder\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"player-country placeholder\",\n        children: \"--\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-points placeholder\",\n        children: \"-- points\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"players-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"page-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"World Golf Rankings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Current top players in professional golf\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), debugInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"debug-info\",\n      children: /*#__PURE__*/_jsxDEV(\"small\", {\n        children: [\"Debug: \", debugInfo]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading players from API...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDEA8 API Connection Issue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Error:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 14\n        }, this), \" \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"details\", {\n        children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n          children: \"Troubleshooting Steps\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Start Backend:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 19\n            }, this), \" Run \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \"npm start\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 55\n            }, this), \" in your golf-api-backend folder\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Check Backend:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 19\n            }, this), \" Visit \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"http://localhost:5000/api/health\",\n              target: \"_blank\",\n              children: \"http://localhost:5000/api/health\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 57\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Test Endpoint:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 19\n            }, this), \" Visit \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"http://localhost:5000/api/golf/rankings\",\n              target: \"_blank\",\n              children: \"http://localhost:5000/api/golf/rankings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 57\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Check API Key:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 19\n            }, this), \" Verify your Sportradar API key is still valid\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Check Console:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 19\n            }, this), \" Open browser dev tools for detailed error messages\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"players-grid\",\n      children: Array(20).fill(null).map((_, index) => renderPlayerCard(players[index] || null, index))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"page-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: players.length > 0 ? `Showing ${players.length} players • Data provided by Sportradar API` : 'Data provided by Sportradar API'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 5\n  }, this);\n};\n_s(PlayersPage, \"S8SLtHTQnI4PoNbX0K/9uIdYs0Y=\");\n_c = PlayersPage;\nexport default PlayersPage;\n// import React, { useState, useEffect } from 'react';\n\n// interface Player {\n//   id: string;\n//   name: string;\n//   country: string;\n//   rank: number;\n//   points: number;\n// }\n\n// interface ApiResponse {\n//   rankings: Array<{\n//     id: string;\n//     name: string;\n//     country: string;\n//     rank: number;\n//     points: number;\n//   }>;\n// }\n\n// const PlayersPage: React.FC = () => {\n//   const [players, setPlayers] = useState<Player[]>([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState<string | null>(null);\n\n//   useEffect(() => {\n//     const fetchPlayers = async () => {\n//       try {\n//         const apiKey = 'mI0K6O5QLl4C7PBOxGl46rBnfaemkzs0SOVokjP';\n//         const url = `https://api.sportradar.com/golf/trial/v3/en/players/wgr/2025/rankings.json?api_key=${apiKey}`;\n\n//         const response = await fetch(url);\n\n//         if (!response.ok) {\n//           throw new Error(`HTTP error! status: ${response.status}`);\n//         }\n\n//         const data: ApiResponse = await response.json();\n\n//         if (data.rankings && Array.isArray(data.rankings)) {\n//           setPlayers(data.rankings.slice(0, 20)); // Show top 20 players\n//         } else {\n//           throw new Error('Invalid data format');\n//         }\n//       } catch (err) {\n//         console.error('Error fetching players:', err);\n//         setError('Failed to load player data');\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchPlayers();\n//   }, []);\n\n//   const renderPlayerCard = (player: Player | null, index: number) => (\n//     <div \n//       key={index}\n//       style={{\n//         border: '1px solid #ddd',\n//         borderRadius: '8px',\n//         padding: '1.5rem',\n//         backgroundColor: '#f9f9f9',\n//         textAlign: 'center'\n//       }}\n//     >\n//       {player ? (\n//         <>\n//           <div style={{\n//             fontSize: '2rem',\n//             fontWeight: 'bold',\n//             color: '#2c5530',\n//             marginBottom: '0.5rem'\n//           }}>\n//             #{player.rank}\n//           </div>\n//           <h3 style={{\n//             margin: '0.5rem 0',\n//             color: '#333'\n//           }}>\n//             {player.name}\n//           </h3>\n//           <p style={{\n//             color: '#666',\n//             margin: '0.5rem 0'\n//           }}>\n//             {player.country}\n//           </p>\n//           <div style={{\n//             backgroundColor: '#2c5530',\n//             color: 'white',\n//             padding: '0.5rem',\n//             borderRadius: '4px',\n//             fontSize: '0.9rem'\n//           }}>\n//             {player.points} points\n//           </div>\n//         </>\n//       ) : (\n//         <>\n//           <div style={{\n//             fontSize: '2rem',\n//             fontWeight: 'bold',\n//             color: '#999',\n//             marginBottom: '0.5rem'\n//           }}>\n//             #--\n//           </div>\n//           <h3 style={{\n//             margin: '0.5rem 0',\n//             color: '#999'\n//           }}>\n//             TBD\n//           </h3>\n//           <p style={{\n//             color: '#999',\n//             margin: '0.5rem 0'\n//           }}>\n//             TBD\n//           </p>\n//           <div style={{\n//             backgroundColor: '#999',\n//             color: 'white',\n//             padding: '0.5rem',\n//             borderRadius: '4px',\n//             fontSize: '0.9rem'\n//           }}>\n//             TBD points\n//           </div>\n//         </>\n//       )}\n//     </div>\n//   );\n\n//   return (\n//     <div>\n//       <header style={{ textAlign: 'center', marginBottom: '2rem' }}>\n//         <h1 style={{ \n//           fontSize: '2.5rem', \n//           color: '#2c5530',\n//           marginBottom: '1rem'\n//         }}>\n//           World Golf Rankings\n//         </h1>\n//         <p style={{ \n//           fontSize: '1.1rem', \n//           color: '#666'\n//         }}>\n//           Current top players in professional golf\n//         </p>\n//       </header>\n\n//       {loading && (\n//         <div style={{ textAlign: 'center', padding: '2rem' }}>\n//           <p style={{ fontSize: '1.2rem', color: '#666' }}>Loading players...</p>\n//         </div>\n//       )}\n\n//       {error && (\n//         <div style={{ \n//           textAlign: 'center', \n//           padding: '2rem',\n//           backgroundColor: '#ffe6e6',\n//           border: '1px solid #ffb3b3',\n//           borderRadius: '8px',\n//           marginBottom: '2rem'\n//         }}>\n//           <p style={{ color: '#cc0000', fontSize: '1.1rem' }}>{error}</p>\n//         </div>\n//       )}\n\n//       <div style={{ \n//         display: 'grid', \n//         gridTemplateColumns: 'repeat(auto-fill, minmax(280px, 1fr))',\n//         gap: '1.5rem',\n//         marginBottom: '2rem'\n//       }}>\n//         {Array(20).fill(null).map((_, index) => \n//           renderPlayerCard(players[index] || null, index)\n//         )}\n//       </div>\n\n//       <footer style={{ \n//         textAlign: 'center', \n//         padding: '2rem 0',\n//         borderTop: '1px solid #eee',\n//         color: '#666'\n//       }}>\n//         <p>Data provided by Sportradar API</p>\n//       </footer>\n//     </div>\n//   );\n// };\n\n// export default PlayersPage;\nvar _c;\n$RefreshReg$(_c, \"PlayersPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","PlayersPage","_s","players","setPlayers","loading","setLoading","error","setError","debugInfo","setDebugInfo","fetchPlayers","backendUrl","console","log","response","fetch","method","headers","status","ok","errorText","text","Error","data","json","Object","keys","playersData","rankings","Array","isArray","length","possibleArrays","values","filter","join","validPlayers","player","name","rank","map","id","country","Number","points","sort","a","b","slice","err","errorMessage","message","includes","renderPlayerCard","index","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","href","target","fill","_","_c","$RefreshReg$"],"sources":["/Users/michaelgarchitorena/Downloads/golf_project/golf-rankings-app/src/PlayersPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './PlayersPage.css';\n\ninterface Player {\n  id: string;\n  name: string;\n  country: string;\n  rank: number;\n  points: number;\n}\n\ninterface ApiResponse {\n  rankings?: Player[];\n  players?: Player[];\n  data?: any;\n  [key: string]: any; // Allow for unknown response structures\n}\n\nconst PlayersPage: React.FC = () => {\n  const [players, setPlayers] = useState<Player[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [debugInfo, setDebugInfo] = useState<string>('');\n\n  useEffect(() => {\n    const fetchPlayers = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        setDebugInfo('Starting API call...');\n        \n        // Only try the backend proxy - no more direct API calls\n        const backendUrl = 'http://localhost:5000/api/golf/rankings';\n        \n        console.log(`Fetching from backend: ${backendUrl}`);\n        setDebugInfo(`Calling backend: ${backendUrl}`);\n        \n        const response = await fetch(backendUrl, {\n          method: 'GET',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n          },\n        });\n        \n        console.log(`Response status: ${response.status}`);\n        // console.log(`Response headers:`, [...response.headers.entries()]);\n        \n        if (!response.ok) {\n          const errorText = await response.text();\n          console.error(`Backend error:`, errorText);\n          throw new Error(`Backend Error (${response.status}): ${errorText}`);\n        }\n        \n        const data: ApiResponse = await response.json();\n        console.log('Raw API Response:', data);\n        console.log('Response keys:', Object.keys(data));\n        \n        // Try to extract players from different possible response structures\n        let playersData: Player[] = [];\n        \n        if (data.rankings && Array.isArray(data.rankings)) {\n          playersData = data.rankings;\n          setDebugInfo(`Found ${playersData.length} players in 'rankings' field`);\n        } else if (data.players && Array.isArray(data.players)) {\n          playersData = data.players;\n          setDebugInfo(`Found ${playersData.length} players in 'players' field`);\n        } else if (Array.isArray(data)) {\n          playersData = data;\n          setDebugInfo(`Found ${playersData.length} players in root array`);\n        } else {\n          // Check for nested data structures\n          const possibleArrays = Object.values(data).filter(Array.isArray);\n          if (possibleArrays.length > 0) {\n            playersData = possibleArrays[0] as Player[];\n            setDebugInfo(`Found ${playersData.length} players in nested array`);\n          } else {\n            console.log('Unexpected data structure:', data);\n            setDebugInfo(`Unexpected response format. Keys: ${Object.keys(data).join(', ')}`);\n            throw new Error(`No player array found in response. Available keys: ${Object.keys(data).join(', ')}`);\n          }\n        }\n        \n        if (playersData.length === 0) {\n          throw new Error('No player data found in response');\n        }\n        \n        // Validate and clean the data\n        const validPlayers = playersData\n          .filter(player => player && player.name && player.rank)\n          .map(player => ({\n            id: player.id || `player-${player.rank}`,\n            name: player.name,\n            country: player.country || 'Unknown',\n            rank: Number(player.rank),\n            points: Number(player.points) || 0\n          }))\n          .sort((a, b) => a.rank - b.rank)\n          .slice(0, 20); // Top 20 players\n        \n        setPlayers(validPlayers);\n        setDebugInfo(`Successfully loaded ${validPlayers.length} valid players`);\n        setError(null); // Clear any previous errors\n        \n      } catch (err: any) {\n        console.error('API Error:', err);\n        \n        // Provide specific error messages\n        let errorMessage = 'Unknown error occurred';\n        \n        if (err.message.includes('Failed to fetch') || err.message.includes('NetworkError')) {\n          errorMessage = 'Cannot connect to backend server. Make sure your backend is running on http://localhost:5000';\n        } else if (err.message.includes('Backend Error')) {\n          errorMessage = err.message;\n        } else if (err.message.includes('No player')) {\n          errorMessage = `API returned data but no players found: ${err.message}`;\n        } else {\n          errorMessage = `API Error: ${err.message}`;\n        }\n        \n        setError(errorMessage);\n        setDebugInfo(`Error: ${err.message}`);\n        \n        // Don't load mock data - let's fix the real API\n        setPlayers([]);\n        \n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchPlayers();\n  }, []);\n\n  const renderPlayerCard = (player: Player | null, index: number) => (\n    <div key={index} className=\"player-card\">\n      {player ? (\n        <>\n          <div className=\"player-rank\">#{player.rank}</div>\n          <h3 className=\"player-name\">{player.name}</h3>\n          <p className=\"player-country\">{player.country}</p>\n          <div className=\"player-points\">\n            {typeof player.points === 'number' && player.points > 0\n              ? `${player.points.toFixed(3)} points`\n              : 'N/A points'\n            }\n          </div>\n        </>\n      ) : (\n        <>\n          <div className=\"player-rank placeholder\">#--</div>\n          <h3 className=\"player-name placeholder\">Loading...</h3>\n          <p className=\"player-country placeholder\">--</p>\n          <div className=\"player-points placeholder\">-- points</div>\n        </>\n      )}\n    </div>\n  );\n\n  return (\n    <div className=\"players-page\">\n      <header className=\"page-header\">\n        <h1>World Golf Rankings</h1>\n        <p>Current top players in professional golf</p>\n      </header>\n\n      {/* Debug Info */}\n      {debugInfo && (\n        <div className=\"debug-info\">\n          <small>Debug: {debugInfo}</small>\n        </div>\n      )}\n\n      {loading && (\n        <div className=\"loading-container\">\n          <p>Loading players from API...</p>\n        </div>\n      )}\n\n      {error && (\n        <div className=\"error-container\">\n          <h3>🚨 API Connection Issue</h3>\n          <p><strong>Error:</strong> {error}</p>\n          <details>\n            <summary>Troubleshooting Steps</summary>\n            <ul>\n              <li><strong>Start Backend:</strong> Run <code>npm start</code> in your golf-api-backend folder</li>\n              <li><strong>Check Backend:</strong> Visit <a href=\"http://localhost:5000/api/health\" target=\"_blank\">http://localhost:5000/api/health</a></li>\n              <li><strong>Test Endpoint:</strong> Visit <a href=\"http://localhost:5000/api/golf/rankings\" target=\"_blank\">http://localhost:5000/api/golf/rankings</a></li>\n              <li><strong>Check API Key:</strong> Verify your Sportradar API key is still valid</li>\n              <li><strong>Check Console:</strong> Open browser dev tools for detailed error messages</li>\n            </ul>\n          </details>\n        </div>\n      )}\n\n      <div className=\"players-grid\">\n        {Array(20).fill(null).map((_, index) => \n          renderPlayerCard(players[index] || null, index)\n        )}\n      </div>\n\n      <footer className=\"page-footer\">\n        <p>\n          {players.length > 0 \n            ? `Showing ${players.length} players • Data provided by Sportradar API`\n            : 'Data provided by Sportradar API'\n          }\n        </p>\n      </footer>\n    </div>\n  );\n};\n\nexport default PlayersPage;\n// import React, { useState, useEffect } from 'react';\n\n// interface Player {\n//   id: string;\n//   name: string;\n//   country: string;\n//   rank: number;\n//   points: number;\n// }\n\n// interface ApiResponse {\n//   rankings: Array<{\n//     id: string;\n//     name: string;\n//     country: string;\n//     rank: number;\n//     points: number;\n//   }>;\n// }\n\n// const PlayersPage: React.FC = () => {\n//   const [players, setPlayers] = useState<Player[]>([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState<string | null>(null);\n\n//   useEffect(() => {\n//     const fetchPlayers = async () => {\n//       try {\n//         const apiKey = 'mI0K6O5QLl4C7PBOxGl46rBnfaemkzs0SOVokjP';\n//         const url = `https://api.sportradar.com/golf/trial/v3/en/players/wgr/2025/rankings.json?api_key=${apiKey}`;\n        \n//         const response = await fetch(url);\n        \n//         if (!response.ok) {\n//           throw new Error(`HTTP error! status: ${response.status}`);\n//         }\n        \n//         const data: ApiResponse = await response.json();\n        \n//         if (data.rankings && Array.isArray(data.rankings)) {\n//           setPlayers(data.rankings.slice(0, 20)); // Show top 20 players\n//         } else {\n//           throw new Error('Invalid data format');\n//         }\n//       } catch (err) {\n//         console.error('Error fetching players:', err);\n//         setError('Failed to load player data');\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     fetchPlayers();\n//   }, []);\n\n//   const renderPlayerCard = (player: Player | null, index: number) => (\n//     <div \n//       key={index}\n//       style={{\n//         border: '1px solid #ddd',\n//         borderRadius: '8px',\n//         padding: '1.5rem',\n//         backgroundColor: '#f9f9f9',\n//         textAlign: 'center'\n//       }}\n//     >\n//       {player ? (\n//         <>\n//           <div style={{\n//             fontSize: '2rem',\n//             fontWeight: 'bold',\n//             color: '#2c5530',\n//             marginBottom: '0.5rem'\n//           }}>\n//             #{player.rank}\n//           </div>\n//           <h3 style={{\n//             margin: '0.5rem 0',\n//             color: '#333'\n//           }}>\n//             {player.name}\n//           </h3>\n//           <p style={{\n//             color: '#666',\n//             margin: '0.5rem 0'\n//           }}>\n//             {player.country}\n//           </p>\n//           <div style={{\n//             backgroundColor: '#2c5530',\n//             color: 'white',\n//             padding: '0.5rem',\n//             borderRadius: '4px',\n//             fontSize: '0.9rem'\n//           }}>\n//             {player.points} points\n//           </div>\n//         </>\n//       ) : (\n//         <>\n//           <div style={{\n//             fontSize: '2rem',\n//             fontWeight: 'bold',\n//             color: '#999',\n//             marginBottom: '0.5rem'\n//           }}>\n//             #--\n//           </div>\n//           <h3 style={{\n//             margin: '0.5rem 0',\n//             color: '#999'\n//           }}>\n//             TBD\n//           </h3>\n//           <p style={{\n//             color: '#999',\n//             margin: '0.5rem 0'\n//           }}>\n//             TBD\n//           </p>\n//           <div style={{\n//             backgroundColor: '#999',\n//             color: 'white',\n//             padding: '0.5rem',\n//             borderRadius: '4px',\n//             fontSize: '0.9rem'\n//           }}>\n//             TBD points\n//           </div>\n//         </>\n//       )}\n//     </div>\n//   );\n\n//   return (\n//     <div>\n//       <header style={{ textAlign: 'center', marginBottom: '2rem' }}>\n//         <h1 style={{ \n//           fontSize: '2.5rem', \n//           color: '#2c5530',\n//           marginBottom: '1rem'\n//         }}>\n//           World Golf Rankings\n//         </h1>\n//         <p style={{ \n//           fontSize: '1.1rem', \n//           color: '#666'\n//         }}>\n//           Current top players in professional golf\n//         </p>\n//       </header>\n\n//       {loading && (\n//         <div style={{ textAlign: 'center', padding: '2rem' }}>\n//           <p style={{ fontSize: '1.2rem', color: '#666' }}>Loading players...</p>\n//         </div>\n//       )}\n\n//       {error && (\n//         <div style={{ \n//           textAlign: 'center', \n//           padding: '2rem',\n//           backgroundColor: '#ffe6e6',\n//           border: '1px solid #ffb3b3',\n//           borderRadius: '8px',\n//           marginBottom: '2rem'\n//         }}>\n//           <p style={{ color: '#cc0000', fontSize: '1.1rem' }}>{error}</p>\n//         </div>\n//       )}\n\n//       <div style={{ \n//         display: 'grid', \n//         gridTemplateColumns: 'repeat(auto-fill, minmax(280px, 1fr))',\n//         gap: '1.5rem',\n//         marginBottom: '2rem'\n//       }}>\n//         {Array(20).fill(null).map((_, index) => \n//           renderPlayerCard(players[index] || null, index)\n//         )}\n//       </div>\n\n//       <footer style={{ \n//         textAlign: 'center', \n//         padding: '2rem 0',\n//         borderTop: '1px solid #eee',\n//         color: '#666'\n//       }}>\n//         <p>Data provided by Sportradar API</p>\n//       </footer>\n//     </div>\n//   );\n// };\n\n// export default PlayersPage;\n"],"mappings":"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A,eAC7B3D,OAAA;QAAA2D,QAAA,EACGtD,OAAO,CAAC6B,MAAM,GAAG,CAAC,GACf,WAAW7B,OAAO,CAAC6B,MAAM,4CAA4C,GACrE;MAAiC;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEpC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAC3D,EAAA,CAlMID,WAAqB;AAAAkE,EAAA,GAArBlE,WAAqB;AAoM3B,eAAeA,WAAW;AAC1B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAkE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}